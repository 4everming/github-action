# Typically you would let this action
# determine the unique build it to tie multiple parallel
# test jobs together into a single logical Dashboard run.
# But sometimes you need to execute Cypress using
# your own custom command and pass your --ci-build-id
# In that case it is important to make sure this build id
# is generated _again_ on workflow re-run. This example
# shows how to do create a unique ID then pass it to
# multiple testing jobs running in parallel
# based on the recipe written in
# https://medium.com/attest-r-and-d/adding-a-unique-github-build-identifier-7aa2e83cadca
name: example-custom-ci-build-id
on: [push]
jobs:
  # single job that generates and outputs a common id
  prepare:
    runs-on: ubuntu-20.04
    outputs:
      uuid: ${{ steps.uuid.outputs.value }}
    steps:
      - name: Generate unique ID ðŸ’Ž
        id: uuid
        # take the current commit + timestamp together
        # the typical value would be something like
        # "sha-5d3fe...35d3-time-1620841214"
        run: echo "::set-output name=value::sha-$GITHUB_SHA-time-$(date +"%s")"

      - name: Print unique ID ðŸ–¨`
        run: echo "generated id ${{ steps.uuid.outputs.value }}"

  tests:
    needs: ['prepare']
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        containers: [1, 2, 3]
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v2

      - name: Print custom build id ðŸ–¨
        run: echo "Custom build id is ${{ needs.prepare.outputs.uuid }}"

      - name: Tests using custom build id ðŸ§ª
        uses: ./
        with:
          # we can pass the build id using CLI argument
          # since we are using a custom command
          command: |
            npx cypress run --record --parallel \
              --ci-build-id ${{ needs.context.outputs.uuid }} \
              --group "all tests"
          working-directory: examples/recording
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.EXAMPLE_RECORDING_KEY }}
